{"ast":null,"code":"var _jsxFileName = \"/Users/jinsungpark/Desktop/web/ReactJS/react_study/Udemy_reactJS/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: undefined\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: undefined\n  }); // destructuring을 통해 useEffect가 너무 많이 바뀌는 것을 방지하는 구문, 아래는 destructuring을 통해 유효값이 변경될때만 useEffect가 실행하도록 만듬\n  // 핵심은 destructuring이 아니라 전체 개체대신 특정 속성을 종속성으로 전달한다는 것이다!\n\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      // useEffect에서 반환되는 첫번째 반환 함수는 맨 처음에는 실행되지 않지만, 그 다음 컴포넌트들이 바뀔때 마다 제일 먼저 실행됨 -> 그 다음에 useEffect 안의 명령들이 실행됨\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const authCtx = useContext(AuthContext);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        emailState: emailState,\n        emailChangeHandler: emailChangeHandler,\n        validateEmailHandler: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        emailState: passwordState,\n        emailChangeHandler: passwordChangeHandler,\n        validateEmailHandler: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"FcUGD4QlW/EHd1rOXrFa1idQLAo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","undefined","passwordState","dispatchPassword","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","authCtx","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"sources":["/Users/jinsungpark/Desktop/web/ReactJS/react_study/Udemy_reactJS/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {value: state.value, isValid: state.value.includes('@')}\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6};\n  } \n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6};\n  }\n  return { value: '', isValid: false};\n} \n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: undefined });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: undefined });\n\n  // destructuring을 통해 useEffect가 너무 많이 바뀌는 것을 방지하는 구문, 아래는 destructuring을 통해 유효값이 변경될때만 useEffect가 실행하도록 만듬\n  // 핵심은 destructuring이 아니라 전체 개체대신 특정 속성을 종속성으로 전달한다는 것이다!\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking form validity!')\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );  \n    }, 500);\n\n    return () => { // useEffect에서 반환되는 첫번째 반환 함수는 맨 처음에는 실행되지 않지만, 그 다음 컴포넌트들이 바뀔때 마다 제일 먼저 실행됨 -> 그 다음에 useEffect 안의 명령들이 실행됨\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const authCtx = useContext(AuthContext);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value})\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          emailState={emailState}\n          emailChangeHandler={emailChangeHandler}\n          validateEmailHandler={validateEmailHandler}  \n        />\n        <Input \n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          emailState={passwordState}\n          emailChangeHandler={passwordChangeHandler}\n          validateEmailHandler={validateEmailHandler}  \n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
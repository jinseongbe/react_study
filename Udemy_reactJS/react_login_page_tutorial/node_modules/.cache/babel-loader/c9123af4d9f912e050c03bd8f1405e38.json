{"ast":null,"code":"var _jsxFileName = \"/Users/jinsungpark/Desktop/web/ReactJS/react_study/Udemy_reactJS/01-starting-project/src/components/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","setItem","children"],"sources":["/Users/jinsungpark/Desktop/web/ReactJS/react_study/Udemy_reactJS/01-starting-project/src/components/store/auth-context.js"],"sourcesContent":["import React , { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  }\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn');\n    setIsLoggedIn(true);\n  }\n\n  return <AuthContext.Provider value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACtCC,UAAU,EAAE,KAD0B;EAEtCC,QAAQ,EAAE,MAAM,CAAE,CAFoB;EAGtCC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMW,aAAa,GAAG,MAAM;IAC1BC,YAAY,CAACC,UAAb,CAAwB,YAAxB;IACAH,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,MAAMI,YAAY,GAAG,MAAM;IACzBF,YAAY,CAACG,OAAb,CAAqB,YAArB;IACAL,aAAa,CAAC,IAAD,CAAb;EACD,CAHD;;EAKA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEP,UAAU,EAAEA,UAAd;MAA0BC,QAAQ,EAAEO,aAApC;MAAmDN,OAAO,EAAES;IAA5D,CAA7B;IAAA,UAAyGL,KAAK,CAACO;EAA/G;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAdM;;GAAMR,mB;;KAAAA,mB;AAgBb,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}